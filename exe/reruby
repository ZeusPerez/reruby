#! /usr/bin/env ruby

require 'thor'

require 'reruby'

class RerubyCLI < Thor

  def self.exit_on_failure?
    true
  end

  desc "Rename a const", "rename From::Some::Const to Other"
  method_option :location, :type => "boolean", :aliases => "l"
  def rename_const(from, to)
    from = force_namespace(from)
    refactor = Reruby::RenameConst.new(from: from, to: to)
    refactor.perform
  end

  desc "Explode a namespace", "explode_namespace Class::With::Inline::Classes"
  method_option :location, :type => "boolean", :aliases => "l"
  def explode_namespace(namespace_to_explode)
    namespace_to_explode = force_namespace(namespace_to_explode)
    refactor = Reruby::ExplodeNamespace.new(namespace_to_explode: namespace_to_explode)
    refactor.perform
  end

  private

  def force_namespace(namespace_or_location)
    if options[:location]
      Reruby::SourceLocator.locate_namespace_in_path_with_line(namespace_or_location).as_source
    else
      namespace_or_location
    end
  end

end

RerubyCLI.start(ARGV)
